// Variables grid 
$cols: 12;
$lines: 13;
$gutter: 3rem;
$l-device: 1200px;
$m-device: 992px;
$s-device: 768px;
$xs-device: 560px;

.container {
  max-width: $l-device;
  width: 100%;
  margin: 0 auto;
}

.title-margin {
  margin-top: 10rem;
}

@mixin grid-column {
  display: grid;
  grid-gap: 3rem;
  grid-auto-flow: column;
}

// Grid start
.grid-start {
  @include grid-column();
  justify-content: start;
}

// Grid start
.grid-center {
  @include grid-column();
  justify-content: center;
}

// Grid between
.grid-between {
  @include grid-column();
  justify-content: space-between;
}

// Grid evenly
.grid-evenly {
  @include grid-column();
  justify-content: space-evenly;
}

// Align items
.grid-align-start {
  align-items: start;
}

.grid-align-center {
  align-items: center;
}

.grid-align-end { 
  align-items: end;
}

// Align self item
.grid-self-start {
  align-self: start;
}

.grid-self-center {
  align-self: center;
}

.grid-self-end { 
  align-self: end;
}

// Grid generator
.grid-container {
  display: grid;
  grid-template-columns: repeat(12, auto);
  grid-gap: $gutter;
}

// Basic Grid
@for $i from 1 through $cols {
  .grid-#{$i} {
    grid-column: span #{$i}
  }

  .grid-offset-#{$i} {
    grid-column: #{$i} / -1;
  }
}

// X-Small Grid
@media (min-width: $xs-device) {
  @for $i from 1 through $cols {
    .grid-xs-#{$i} {
      grid-column: span #{$i}
    }

    .grid-xs-offset-#{$i} {
      grid-column: #{$i} / -1;
    }
  }
}

// Small Grid
@media (min-width: $s-device) {
  @for $i from 1 through $cols {
    .grid-s-#{$i} {
      grid-column: span #{$i}
    }

    .grid-s-offset-#{$i} {
      grid-column: #{$i} / -1;
    }
  }
}

// Medium Grid
@media (min-width: $m-device) {
  @for $i from 1 through $cols {
    .grid-m-#{$i} {
      grid-column: span #{$i}
    }

    .grid-m-offset-#{$i} {
      grid-column: #{$i} / -1;
    }
  }
}

// Large Grid
@media (min-width: $l-device) {
  @for $i from 1 through $cols {
    .grid-l-#{$i} {
      grid-column: span #{$i}
    }

    .grid-l-offset-#{$i} {
      grid-column: #{$i} / -1;
    }
  }
}

// Grid-mosaic-1
.mosaic {
  display: grid;
  grid-gap: .5rem;
}

@mixin mosaic-1 {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, auto);
  grid-gap: .5rem;

  &>*:first-child {
    grid-row: span 2;
  }

  &>*:nth-child(2) {
    grid-column: 2 / 3;
  }

  &>*:nth-child(3) {
    grid-column: 3 / 4;
  }

  &>*:last-child {
    grid-column: span 2;
  }
}

// Grid-mosaic-2
@mixin mosaic-2 {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, auto);
  grid-gap: .5rem;

  &>*:first-child {
    grid-column: 1 / 2;
  }

  &>*:nth-child(2) {
    grid-column: 2 / -1;
  }

  &>*:nth-child(3) {
    grid-column: 1 / 3;
  }

  &>*:nth-child(4) {
    grid-column: 3 / 4;
  }
}

// Grid-mosaic-3
@mixin mosaic-3 {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, auto);
  grid-gap: .5rem;

  &>*:first-child {
    grid-column: 1 / 2;
  }

  &>*:nth-child(2) {
    grid-column: 2 / 3;
  }

  &>*:nth-child(3) {
    grid-column: 3 / 4;
  }

  &>*:last-child {
    grid-column: 1 / -1;
  }
}

// Grid-mosaic-4
@mixin mosaic-4 {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, auto);
  grid-gap: .5rem;

  &>*:first-child {
    grid-column: 1 / 3;
  }

  &>*:nth-child(2) {
    grid-column: 3 / 4;
    grid-row: 1 / -1;
  }

  &>*:nth-child(3) {
    grid-column: 1 / 2;
  }

  &>*:last-child {
    grid-column: 2 / 3;
  }
}

.mosaic-1 {
  @include mosaic-1();
}

.mosaic-2 {
  @include mosaic-2();
}

.mosaic-3 {
  @include mosaic-3();
}
.mosaic-4 {
  @include mosaic-4();
}

@media (min-width: $xs-device) {
  .mosaic-xs-1 {
    @include mosaic-1();
  }
  .mosaic-xs-2 {
    @include mosaic-2();
  }
  .mosaic-xs-3 {
    @include mosaic-4();
  }
  .mosaic-xs-4 {
    @include mosaic-4();
  }
}

@media (min-width: $s-device) {
  .mosaic-s-1 {
    @include mosaic-1();
  }
  .mosaic-s-2 {
    @include mosaic-2();
  }
  .mosaic-s-3 {
    @include mosaic-3();
  }
  .mosaic-s-4 {
    @include mosaic-4();
  }
}

@media (min-width: $m-device) {
  .mosaic-m-1 {
    @include mosaic-1();
  }
  .mosaic-m-2 {
    @include mosaic-2();
  }
  .mosaic-m-3 {
    @include mosaic-3();
  }
  .mosaic-m-4 {
    @include mosaic-4();
  }
}

@media (min-width: $l-device) {
  .mosaic-l-1 {
    @include mosaic-1();
  }
  .mosaic-l-2 {
    @include mosaic-2();
  }
  .mosaic-l-3 {
    @include mosaic-3();
  }
  .mosaic-l-4 {
    @include mosaic-4();
  }
}

@media (max-width: $xs-device) {
  .grid-container {
    grid-gap: $gutter / 2;
  }

  .grid-start, .grid-center, .grid-end, .grid-between, .grid-evenly {
    grid-auto-flow: initial;
    grid-template-columns: 100%;
  }
}