extends ../_components/layout.pug
include ../_components/mixins/mixins.pug

//- head
//- ===================================
append head
  - var urlCSS = "../css/"
  include ../_includes/head.pug

//- Content
//- ===================================
block content
  - var selected = 'Grid';	
  - var urlAncor = '../#'
  - var urlIndex = '../index.html'
  - var urlImg = '../img/'
  - var urlPages = '../pages-components/'; 

  //Main
  main.main(id="main")
    include ../_includes/menu.pug	

    .main-content(id="main")
      //- Grid padrão 
      h1.main-content__title Grid
      div(class="collapse" data-collapse="group")
        div(class="utilization collapse__title" data-collapse="item") Veja como utilizar
        div.main-content__text.moldure(data-collapse="content")
          p.space-bottom Para utilizar o sistema de <b>grid</b> é necessário acrescentar um elemento <b>pai</b> com a classe <b>grid-container</b> e adicionar aos elementos filhos, as classes grid-<b>numero<small>*</small></b> ou grid-xs-<b>numero<small>*</small></b> ou grid-s-<b>numero<small>*</small></b> ou grid-m-<b>numero<small>*</small></b> ou grid-l-<b>numero<small>*</small></b>.

          p O <b>número<small>*</small></b> varia de <b>1 até 12</b>, pois foi desenvolvido para comportar até <b>12 colunas</b>.

          ul.space-bottom(style="list-style: disc; padding-left: 4rem;")
            li O valor do <b>grid-numero<small>*</small> (default)</b> corresponde à tela com tamanho até <b>560px</b>;
            li O valor do <b>grid-xs-numero<small>*</small> (extra-small)</b> corresponde à tela com tamanho mínimo de <b>560px</b>;
            li O valor do <b>grid-s-numero<small>*</small> (small)</b> corresponde à tela com tamanho mínimo <b>de 768px</b>;
            li O valor do <b>grid-m-numero<small>*</small> (medium)</b> corresponde à tela com tamanho mínimo de <b>992px</b>;
            li O valor do <b>grid-l-numero<small>*</small> (large)</b> corresponde à tela com tamanho mínimo de <b>1200px</b>;

          p.space-bottom Para acrescentar uma margem de <b>offset</b>, é necessário adicionar as classes grid-offset-<b>numero<small>*</small></b> ou grid-xs-offset-<b>numero<small>*</small></b> ou grid-s-offset-<b>numero<small>*</small></b> ou grid-m-offset-<b>numero<small>*</small></b> ou grid-l-offset-<b>numero<small>*</small></b> nos elementos filhos.

      .grid-block
        h2.main-content__subtitle Exemplo com 12 colunas padrão, 4 em large, 3 em medium e 2 em extra-small
        .grid-container
          div(class="grid-12 grid-xs-6 grid-m-4 grid-l-3")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-12) (grid-xs-6) (grid-m-4) (grid-l-4)]

          div(class="grid-12 grid-xs-6 grid-m-4 grid-l-3")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-12) (grid-xs-6) (grid-m-4) (grid-l-4)]

          div(class="grid-12 grid-xs-6 grid-m-4 grid-l-3")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-12) (grid-xs-6) (grid-m-4) (grid-l-4)]

          div(class="grid-12 grid-xs-6 grid-m-12 grid-l-3")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-12) (grid-xs-6) (grid-m-12) (grid-l-4)]

      .grid-block
        h2.main-content__subtitle Exemplo com 2 colunas padrão, 7 e 5 em small e offset-9 em medium 
        .grid-container
          div(class="grid-6 grid-s-7")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-6) (grid-s-7)]
          
          div(class="grid-6 grid-s-5 grid-m-offset-9")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-6) (grid-s-5) (grid-m-offset-9)]
      
      .grid-block
        h2.main-content__subtitle Exemplo com offset-6 padrão
        .grid-container
          div(class="grid-offset-6")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-offset-6)]

      .grid-block
        h2.main-content__subtitle Exemplo com 2 colunas padrão, 2 em large e offset-8 em large 
        .grid-container
          div(class="grid-6 grid-l-2")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-6) (grid-l-2)]
              
          div(class="grid-6 grid-l-offset-8")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-6) (grid-l-offset-8)]
      
      .grid-block
        h2.main-content__subtitle Exemplo com 12 colunas padrão, 3 em medium e offset-6 na coluna do meio #[span(class="grid-block__item") (nesssa coluna foi adicionado outro grid) ]
        .grid-container
          div(class="grid-12 grid-m-4")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-12) (grid-m-4)]
              
          div(class="grid-12 grid-m-4")
            .grid-container
               div(class="grid-12 grid-xs-offset-6")
                .grid-block__content
                  p #[span(class="grid-block__item") (grid-12) (grid-l-offset-6)]

          div(class="grid-12 grid-m-4")
            .grid-block__content
              p #[span(class="grid-block__item") (grid-12) (grid-m-4)]
              

      //- Alinhamento do grid
      h1.main-content__title.title-margin Alinhamento do Grid
      div(class="collapse" data-collapse="group")
        div(class="utilization collapse__title" data-collapse="item") Veja como utilizar
        div.main-content__text.moldure(data-collapse="content")
          p.space-bottom Por padrão, os itens do grid vem configurados com alinhamento ao topo, no entanto é possível alterar esse comportamento adicionando classes no elemento pai <b>grid-container</b>:
          ul.space-bottom(style="list-style: disc; padding-left: 4rem;")
            li Para alinhar os itens ao topo, adicione a classe <b>grid-align-start</b>
            li Para alinhar os itens ao centro, adicione a classe <b>grid-align-center</b>
            li Para alinhar os itens ao rodapé, adicione a classe <b>grid-align-end</b>

          p.space-bottom Cada item pode também ser alinhado individualmente no <b>eixo y</b>, adicionando classes aos elementos <b>filhos  do grid</b>:
          ul.space-bottom(style="list-style: disc; padding-left: 4rem;")
            li Para alinhar o item ao topo, adicione a classe <b>grid-self-start</b>
            li Para alinhar o item ao centro, adicione a classe <b>grid-self-center</b>
            li Para alinhar o item ao rodapé, adicione a classe <b>grid-self-end</b>

          p.space-bottom É possível ainda alinhar os itens no <b>eixo x</b>, criando um elemento <b>pai</b> com as seguintes classes:
          ul.space-bottom(style="list-style: disc; padding-left: 4rem;")
            li Para alinhar os itens na esquerda, adicione a classe <b>grid-start</b>
            li Para alinhar os itens no centro, adicione a classe <b>grid-center</b>
            li Para alinhar os itens na direita, adicione a classe <b>grid-end</b>
            li Para distribuir os itens em iguais proporções, adicione a classe <b>grid-between</b>
            li Para distribuir os itens em iguais proporções e acrescentar um espaço em volta deles, adicione a classe <b>grid-evenly</b>

          p Nesse exemplo anterior, podem-ser acrescentados quantos elementos filhos forem necessários, desde que comportem no tamanho do layout.


      .grid-block
        h2.main-content__subtitle Exemplo no eixo-y ao centro #[span(class="grid-block__item") (grid-align-center)]
        .grid-container.grid-align-center
          div(class="grid-12 grid-xs-4")
            .grid-block__content
              p Lorem, ipsum dolor sit amet consectetur adipisicing elit.

          div(class="grid-12 grid-xs-4")
            .grid-block__content
              p Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus officia ipsum quam autem laborum aliquid rerum error pariatur, in minus voluptas sint maxime, quas, quae quis impedit expedita fugiat maiores. Lorem ipsum dolor sit amet consectetur adipisicing elit.

          div(class="grid-12 grid-xs-4")
            .grid-block__content
              p Ut necessitatibus tenetur eligendi alias quis aperiam quia earum facilis.
        
      .grid-block
        h2.main-content__subtitle Exemplo no eixo-y ao rodapé #[span(class="grid-block__item") (grid-align-end)]
        .grid-container.grid-align-end
          div(class="grid-12 grid-xs-4")
            .grid-block__content
              p Doloremque itaque nulla eaque tenetur vel, aspernatur minus?

          div(class="grid-12 grid-xs-4")
            .grid-block__content
              p Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus officia ipsum quam autem laborum aliquid rerum error pariatur, in minus voluptas sint maxime, quas, quae quis impedit expedita fugiat maiores.

          div(class="grid-12 grid-xs-4")
            .grid-block__content
              p Lorem ipsum dolor sit amet, consectetur adipisicing elit.
        
      .grid-block
        h2.main-content__subtitle Exemplo no eixo-y para cada item individualmente
        .grid-container
          div(class="grid-12 grid-xs-4 grid-self-end")
            .grid-block__content
              h3.grid-block__content-title #[span(class="grid-block__item") (grid-self-end)]
              p Lorem, ipsum dolor sit amet consectetur adipisicing elit.

          div(class="grid-12 grid-xs-4 grid-self-center")
            .grid-block__content
              h3.grid-block__content-title #[span(class="grid-block__item") (grid-self-center)]
              p Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus officia ipsum quam autem laborum aliquid rerum error pariatur, in minus voluptas sint maxime, quas, quae quis impedit expedita fugiat maiores. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa cum vel consequuntur! 

          div(class="grid-12 grid-xs-4 grid-self-start")
            .grid-block__content
              h3.grid-block__content-title #[span(class="grid-block__item") (grid-self-start)]
              p Lorem ipsum dolor sit amet, consectetur adipisicing elit.

      .grid-block
        h2.main-content__subtitle Exemplo no eixo-x inicial #[span(class="grid-block__item") (grid-start)]
        .grid-start
          div.grid-block__content item 1
          div.grid-block__content item 2
          div.grid-block__content item 3
          div.grid-block__content item 4
          div.grid-block__content item 5

      .grid-block
        h2.main-content__subtitle Exemplo no eixo-x central #[span(class="grid-block__item") (grid-center)]
        .grid-center
          div.grid-block__content item 1
          div.grid-block__content item 2
          div.grid-block__content item 3
          div.grid-block__content item 4
          div.grid-block__content item 5
      
      .grid-block
        h2.main-content__subtitle Exemplo no eixo-x, distribuidos em iguais proporções #[span(class="grid-block__item") (grid-between)]
        .grid-between
          div.grid-block__content item 1
          div.grid-block__content item 2
          div.grid-block__content item 3
          div.grid-block__content item 4
          div.grid-block__content item 5

      .grid-block
        h2.main-content__subtitle Exemplo no eixo-x, distribuidos em iguais proporções e acrescentado um espaço ao lado de fora #[span(class="grid-block__item") (grid-evenly)]
        .grid-evenly
          div.grid-block__content item 1
          div.grid-block__content item 2
          div.grid-block__content item 3
          div.grid-block__content item 4
          div.grid-block__content item 5
          

      //- Grid Mosaico
      h1.main-content__title.title-margin Grid - Mosaico
      div(class="collapse" data-collapse="group")
        div(class="utilization collapse__title" data-collapse="item") Veja como utilizar
        div.main-content__text.moldure(data-collapse="content")
          p.space-bottom Para utilizar o grid mosaico, é necessário criar um elemento <b>pai</b> com uma classe <b>mosaic</b> e outra classe mosaic-<b>numero<small>*</small></b>. Deve-se ainda, acrescentar mais <b>4 elementos filhos</b>. Existem 4 estilos pré-definidos de mosaico e cada <b>número</b> de <b>1 a 4</b> corresponde a um estilo diferente.
          p.space-bottom Se desejar, o mosaico pode ser adicionado conforme o tamanho da tela:

          ul.space-bottom(style="list-style: disc; padding-left: 4rem;")
          li O valor do <b>mosaic-numero<small>*</small></b> corresponde à tela com tamanho indefinido (padrão);
          li O valor do <b>mosaic-xs-numero<small>*</small> (extra-small)</b> corresponde à tela com tamanho mínimo de <b>560px</b>;
          li O valor do <b>mosaic-s-numero<small>*</small> (small)</b> corresponde à tela com tamanho mínimo <b>de 768px</b>;
          li O valor do <b>mosaic-m-numero<small>*</small> (medium)</b> corresponde à tela com tamanho mínimo de <b>992px</b>;
          li O valor do <b>mosaic-l-numero<small>*</small> (large)</b> corresponde à tela com tamanho mínimo de <b>1200px</b>;

      .grid-block
        .grid-container
          div(class="grid-12 grid-l-6")
            h2.main-content__subtitle Exemplo de mosaico 1 - default #[span(class="grid-block__item") (mosaic mosaic-1)]
            ul(class="mosaic mosaic-1")
              li.grid-block__content #[span(class="grid-block__item") item 1]
              li.grid-block__content #[span(class="grid-block__item") item 2] 
              li.grid-block__content #[span(class="grid-block__item") item 3] 
              li.grid-block__content #[span(class="grid-block__item") item 4]
          
          div(class="grid-12 grid-l-6")
            h2.main-content__subtitle Exemplo de mosaico 2 - A partir de 1200px #[span(class="grid-block__item") (mosaic mosaic-l-2)]
            ul(class="mosaic mosaic-l-2")
              li.grid-block__content #[span(class="grid-block__item") item 1]
              li.grid-block__content #[span(class="grid-block__item") item 2] 
              li.grid-block__content #[span(class="grid-block__item") item 3]
              li.grid-block__content #[span(class="grid-block__item") item 4]

          div(class="grid-12 grid-l-6")
            h2.main-content__subtitle Exemplo de mosaico 3 - A partir de 992px #[span(class="grid-block__item") (mosaic mosaic-m-3)]
            ul(class="mosaic mosaic-m-3")
              li.grid-block__content #[span(class="grid-block__item") item 1]
              li.grid-block__content #[span(class="grid-block__item") item 2] 
              li.grid-block__content #[span(class="grid-block__item") item 3] 
              li.grid-block__content #[span(class="grid-block__item") item 4] 
          
          div(class="grid-12 grid-l-6")
            h2.main-content__subtitle Exemplo de mosaico 4 - A partir de 768px #[span(class="grid-block__item") (mosaic mosaic-s-4)]
            ul(class="mosaic mosaic-s-4")
              li.grid-block__content #[span(class="grid-block__item") item 1]
              li.grid-block__content #[span(class="grid-block__item") item 2] 
              li.grid-block__content #[span(class="grid-block__item") item 3] 
              li.grid-block__content #[span(class="grid-block__item") item 4] 

      div.main-content__text.moldure
        p O sistema de grid foi desenvolvido com uso do <b>CSS Grid Layout</b> e portanto, não é compatível com todos os browsers, principalmente os mais antigos. No site do #[a(href="https://caniuse.com/#search=grid" target="_blank") Can I use] é possível verificar à compatibilidade.

    include ../_includes/footer.pug	

  //- scripts
  //- ===================================
  prepend scripts
    - var urlJS = '../js/'
    include ../_includes/scripts.pug